@model Flores_De_Mayo_Information_System.Models.Application.CreateApplicationViewModel

@{
    ViewBag.Title = "CreateApplication";
    Layout = "~/Views/Shared/_WebContent.cshtml";



    List<SelectListItem> dropDown = new List<SelectListItem>();

    foreach (var appType in TempData["application_type"] as List<Flores_De_Mayo_Information_System.Models.Entity.ApplicationType>)
    {

        dropDown.Add(new SelectListItem
        {
            Text = appType.Name,
            Value = appType.ATypeId.ToString()
        });

    }

}

<div class="container">
    <div class="card mb-5 bg-light shadow border-0">
        <h2 class="m-5">Apply for Sagala or Officer</h2>
        <p>@TempData["errorMsg"]</p>

    </div>
</div>

<div class="container">
    <div class="card mb-5 shadow p-5 rounded border-0">


        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.ApplicationType, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.DropDownListFor(model => model.ApplicationType, dropDown, "Select a choice...", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ApplicationType, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-12">
                        <input type="submit" value="Create" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        }

    </div>
</div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
